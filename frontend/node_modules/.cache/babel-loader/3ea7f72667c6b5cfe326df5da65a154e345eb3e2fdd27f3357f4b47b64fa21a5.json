{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      posts: [],\n      success: false\n    };\n  },\n  methods: {\n    fetchPosts: function fetchPosts() {\n      var _this = this;\n      axios.get('http://localhost:5000/api/posts').then(function (res) {\n        _this.posts = res.data;\n      });\n    },\n    deletePost: function deletePost(postId) {\n      var _this2 = this;\n      if (confirm(\"Are you sure you want to delete this post?\")) {\n        axios[\"delete\"](\"http://localhost:5000/api/post/\".concat(postId)).then(function () {\n          _this2.success = true;\n          _this2.fetchPosts(); // Refresh posts list after deletion\n        })[\"catch\"](function (err) {\n          console.error(\"Error deleting post:\", err);\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["axios","data","posts","success","methods","fetchPosts","_this","get","then","res","deletePost","postId","_this2","confirm","concat","err","console","error","mounted"],"sources":["C:\\Users\\ben\\Desktop\\mygit\\myBlog\\frontend\\src\\views\\Admin.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"page-title\">Manage Posts ðŸ‘‹</h2>\r\n    \r\n    <!-- List of posts -->\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post-card\">\r\n      <h3>{{ post.title }}</h3>\r\n      <button @click=\"deletePost(post.id)\" class=\"delete-btn\">Delete</button>\r\n    </div>\r\n\r\n    <p v-if=\"success\" class=\"success-msg\">âœ… Post deleted successfully!</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      success: false\r\n    }\r\n  },\r\n  methods: {\r\n    fetchPosts() {\r\n      axios.get('http://localhost:5000/api/posts')\r\n        .then(res => {\r\n          this.posts = res.data\r\n        })\r\n    },\r\n    deletePost(postId) {\r\n      if (confirm(\"Are you sure you want to delete this post?\")) {\r\n        axios.delete(`http://localhost:5000/api/post/${postId}`)\r\n          .then(() => {\r\n            this.success = true\r\n            this.fetchPosts()  // Refresh posts list after deletion\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error deleting post:\", err)\r\n          })\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-title {\r\n  font-size: 42px;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n  color: #111;\r\n  text-align: center;\r\n}\r\n\r\n.post-card {\r\n  background: #fff;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 18px rgba(0, 0, 0, 0.05);\r\n  padding: 32px;\r\n  margin-bottom: 36px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #ff3b30;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 12px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: #d2301e;\r\n}\r\n\r\n.success-msg {\r\n  color: #28a745;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACXN,KAAK,CAACO,GAAG,CAAC,iCAAiC,EACxCC,IAAI,CAAC,UAAAC,GAAE,EAAK;QACXH,KAAI,CAACJ,KAAI,GAAIO,GAAG,CAACR,IAAG;MACtB,CAAC;IACL,CAAC;IACDS,UAAU,WAAVA,UAAUA,CAACC,MAAM,EAAE;MAAA,IAAAC,MAAA;MACjB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDb,KAAK,UAAO,mCAAAc,MAAA,CAAmCH,MAAM,CAAE,EACpDH,IAAI,CAAC,YAAM;UACVI,MAAI,CAACT,OAAM,GAAI,IAAG;UAClBS,MAAI,CAACP,UAAU,CAAC,GAAG;QACrB,CAAC,UACK,CAAC,UAACU,GAAG,EAAK;UACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG;QAC3C,CAAC;MACL;IACF;EACF,CAAC;EACDG,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,UAAU,CAAC;EAClB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}