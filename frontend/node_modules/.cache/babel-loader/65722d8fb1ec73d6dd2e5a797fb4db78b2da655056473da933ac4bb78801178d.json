{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"main-content\"\n};\nvar _hoisted_3 = {\n  \"class\": \"post-list\"\n};\nvar _hoisted_4 = {\n  \"class\": \"date-title\"\n};\nvar _hoisted_5 = {\n  \"class\": \"post-title\"\n};\nvar _hoisted_6 = {\n  \"class\": \"post-preview\"\n};\nvar _hoisted_7 = {\n  \"class\": \"sidebar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  var _component_vue_cal = _resolveComponent(\"vue-cal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", {\n    \"class\": \"page-title\"\n  }, \"My Blog\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.groupedPosts, function (posts, date) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: date,\n      \"class\": \"date-group\"\n    }, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($options.formatDate(date)), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(posts, function (post) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: post.id,\n        \"class\": \"post-card\"\n      }, [_createVNode(_component_router_link, {\n        to: '/post/' + post.id\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"h3\", _hoisted_5, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(post.body.slice(0, 120)) + \"...\", 1 /* TEXT */)];\n        }),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Simplified Calendar Sidebar \"), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_vue_cal, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.selectedDate = $event;\n    }),\n    onChange: $options.filterPostsByDate,\n    events: _ctx.calendarEvents,\n    \"selected-day\": $data.selectedDate,\n    \"disable-intervals\": true\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\", \"events\", \"selected-day\"])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","groupedPosts","posts","date","key","_hoisted_4","_toDisplayString","$options","formatDate","post","id","_createVNode","_component_router_link","to","_withCtx","_hoisted_5","title","_hoisted_6","body","slice","_","_createCommentVNode","_hoisted_7","_component_vue_cal","modelValue","selectedDate","_cache","$event","onChange","filterPostsByDate","events","_ctx","calendarEvents"],"sources":["C:\\Users\\ben\\Desktop\\mygit\\myBlog\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"main-content\">\n      <h1 class=\"page-title\">My Blog</h1>\n      \n      <div class=\"post-list\">\n        <div v-for=\"(posts, date) in groupedPosts\" :key=\"date\" class=\"date-group\">\n          <h2 class=\"date-title\">{{ formatDate(date) }}</h2>\n          <div v-for=\"post in posts\" :key=\"post.id\" class=\"post-card\">\n            <router-link :to=\"'/post/' + post.id\">\n              <h3 class=\"post-title\">{{ post.title }}</h3>\n              <p class=\"post-preview\">{{ post.body.slice(0, 120) }}...</p>\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Simplified Calendar Sidebar -->\n    <div class=\"sidebar\">\n      <vue-cal v-model=\"selectedDate\" @change=\"filterPostsByDate\" :events=\"calendarEvents\" \n               :selected-day=\"selectedDate\" :disable-intervals=\"true\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport moment from 'moment'\nimport VueCal from 'vue-cal'\nimport 'vue-cal/dist/vuecal.css'\n\nexport default {\n  components: {\n    VueCal\n  },\n  data() {\n    return {\n      posts: [],\n      groupedPosts: {},\n      selectedDate: null\n    }\n  },\n  methods: {\n    fetchPosts() {\n      axios.get('http://localhost:5000/api/posts')\n        .then(res => {\n          this.posts = res.data\n          this.groupPostsByDate()\n        })\n    },\n    groupPostsByDate() {\n      const groups = this.posts.reduce((groups, post) => {\n        const postDate = moment(post.date).format('YYYY-MM-DD')\n        if (!groups[postDate]) {\n          groups[postDate] = []\n        }\n        groups[postDate].push(post)\n        return groups\n      }, {})\n      this.groupedPosts = groups\n    },\n    formatDate(date) {\n      return moment(date).format('MMMM Do YYYY')\n    },\n    filterPostsByDate() {\n      if (this.selectedDate) {\n        const formattedDate = moment(this.selectedDate).format('YYYY-MM-DD')\n        this.groupedPosts = { [formattedDate]: this.posts.filter(post => moment(post.date).isSame(formattedDate, 'day')) }\n      } else {\n        this.groupPostsByDate()\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts()\n  }\n}\n</script>\n\n<style scoped>\n.page-title {\n  font-size: 48px;\n  font-weight: 600;\n  margin-bottom: 24px;\n  color: #111;\n  text-align: center;\n}\n\n.main-content {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.post-list {\n  width: 75%;\n}\n\n.date-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  color: #444;\n}\n\n.post-card {\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: 0 4px 18px rgba(0, 0, 0, 0.05);\n  padding: 24px;\n  margin-bottom: 24px;\n  transition: all 0.3s ease;\n}\n\n.post-title {\n  font-size: 22px;\n  font-weight: 500;\n  margin-bottom: 12px;\n}\n\n.post-preview {\n  color: #444;\n  font-size: 16px;\n  line-height: 1.6;\n}\n\n.sidebar {\n  width: 20%;\n  padding: 20px;\n  border-left: 1px solid #ddd;\n}\n\n.vue-cal {\n  width: 100%;\n  max-width: 300px;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EACO,SAAM;AAAW;;EACf,SAAM;AAAc;;EAGlB,SAAM;AAAW;;EAEd,SAAM;AAAY;;EAGd,SAAM;AAAY;;EACnB,SAAM;AAAc;;EAQ5B,SAAM;AAAS;;;;uBAlBtBA,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJD,mBAAA,CAAmC;IAA/B,SAAM;EAAY,GAAC,SAAO,sBAE9BA,mBAAA,CAUM,OAVNE,UAUM,I,kBATJJ,mBAAA,CAQMK,SAAA,QAddC,WAAA,CAMqCC,KAAA,CAAAC,YAAY,EANjD,UAMqBC,KAAK,EAAEC,IAAI;yBAAxBV,mBAAA,CAQM;MARsCW,GAAG,EAAED,IAAI;MAAE,SAAM;QAC3DR,mBAAA,CAAkD,MAAlDU,UAAkD,EAAAC,gBAAA,CAAxBC,QAAA,CAAAC,UAAU,CAACL,IAAI,oB,kBACzCV,mBAAA,CAKMK,SAAA,QAbhBC,WAAA,CAQ8BG,KAAK,EARnC,UAQsBO,IAAI;2BAAhBhB,mBAAA,CAKM;QALsBW,GAAG,EAAEK,IAAI,CAACC,EAAE;QAAE,SAAM;UAC9CC,YAAA,CAGcC,sBAAA;QAHAC,EAAE,aAAaJ,IAAI,CAACC;;QAT9C,WAAAI,QAAA,CAUc;UAAA,OAA4C,CAA5CnB,mBAAA,CAA4C,MAA5CoB,UAA4C,EAAAT,gBAAA,CAAlBG,IAAI,CAACO,KAAK,kBACpCrB,mBAAA,CAA4D,KAA5DsB,UAA4D,EAAAX,gBAAA,CAAjCG,IAAI,CAACS,IAAI,CAACC,KAAK,YAAW,KAAG,gB;;QAXtEC,CAAA;;;sCAkBIC,mBAAA,iCAAoC,EACpC1B,mBAAA,CAGM,OAHN2B,UAGM,GAFJX,YAAA,CACkEY,kBAAA;IArBxEC,UAAA,EAoBwBxB,KAAA,CAAAyB,YAAY;IApBpC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAoBwB3B,KAAA,CAAAyB,YAAY,GAAAE,MAAA;IAAA;IAAGC,QAAM,EAAErB,QAAA,CAAAsB,iBAAiB;IAAGC,MAAM,EAAEC,IAAA,CAAAC,cAAc;IACzE,cAAY,EAAEhC,KAAA,CAAAyB,YAAY;IAAG,mBAAiB,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}